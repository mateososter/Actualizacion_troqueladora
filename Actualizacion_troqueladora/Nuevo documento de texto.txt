#ifndef __LCD_H__
#define __LCD_H__


#include "stm32f4xx_hal.h"

#define d4_set() HAL_GPIO_WritePin(GPIOD, GPIO_PIN_4, GPIO_PIN_SET);
#define d5_set() HAL_GPIO_WritePin(GPIOD, GPIO_PIN_5, GPIO_PIN_SET);
#define d6_set() HAL_GPIO_WritePin(GPIOD, GPIO_PIN_6, GPIO_PIN_SET);
#define d7_set() HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, GPIO_PIN_SET);

#define d4_reset() HAL_GPIO_WritePin(GPIOD, GPIO_PIN_4, GPIO_PIN_RESET);
#define d5_reset() HAL_GPIO_WritePin(GPIOD, GPIO_PIN_5, GPIO_PIN_RESET);
#define d6_reset() HAL_GPIO_WritePin(GPIOD, GPIO_PIN_6, GPIO_PIN_RESET);
#define d7_reset() HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, GPIO_PIN_RESET);

#define e1    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET) 
#define e0    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_RESET) 
#define rs1   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET) 
#define rs0   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_RESET)

void LCD_ini(void);
void LCD_SendChar(char);

#endif /* __LCD_H__ */












#include "lcd_txt.h"
//---------------------------------------------------------------
void LCD_WriteData(uint8_t dt)

{
        if(((dt >> 3)&0x01)==1) {d7_set();} else {d7_reset();}
				if(((dt >> 2)&0x01)==1) {d6_set();} else {d6_reset();}
				if(((dt >> 1)&0x01)==1) {d5_set();} else {d5_reset();}
				if((dt&0x01)==1) 				{d4_set();} else {d4_reset();}
}
//---------------------------------------------------------------
void delay(void)
	{
		uint16_t i;
		
		for(i=0;i<1000;i++)
	{
	}

	}
//---------------------------------------------------------------


void LCD_Command(uint8_t dt)

{

        rs0;

        LCD_WriteData(dt>>4);

        e1;

        delay();

        e0;

        LCD_WriteData(dt);

        e1;

        delay();

        e0;

}
//---------------------------------------------------------------

 
void LCD_ini(void)

{

        HAL_Delay(40);

        rs0;

        LCD_WriteData(3);

        e1;

        delay();

        e0;

        HAL_Delay(5);

        LCD_WriteData(3);

        e1;

        delay();

        e0;

        HAL_Delay(1);

        LCD_WriteData(3);

        e1;

        delay();

        e0;

        HAL_Delay(1);

        LCD_Command(0x28);

        HAL_Delay(1);

        LCD_Command(0x28);

        HAL_Delay(1);

        LCD_Command(0x0F);

        HAL_Delay(1);

        LCD_Command(0x01);

        HAL_Delay(2);

        LCD_Command(0x06);

        HAL_Delay(1);

        LCD_Command(0x02);

        HAL_Delay(2);

}
//////////////////////////////////////////////////////////////////////////
void LCD_Data(uint8_t dt)

{

        rs1;

        LCD_WriteData(dt>>4);

        e1;

        delay();

        e0;

        LCD_WriteData(dt);

        e1;

        delay();

        e0;

}
//////////////////////////////////////////////////////////////////////////
void LCD_SendChar(char ch)

{

        LCD_Data((uint8_t) ch);

        delay();

}

 //////////////////////////////////////////////////////////////////////////




LCD_ini();
LCD_SendChar('s');







